20 053 12:53:46 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
20 053 12:53:49 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
20 053 12:53:49 CONFIG [gwc.config] - Create configuration file 'gwc/geowebcache.xml' from template jar:file:/opt/apache-tomcat-9.0.65/webapps/geoserver/WEB-INF/lib/gwc-core-1.21.1.jar!/geowebcache_empty.xml
20 053 12:53:49 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
20 053 12:53:49 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
20 053 12:53:49 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
20 053 12:53:50 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'capitals'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'burg'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'grass'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'generic'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'dem'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'green'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'line'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'point'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'poi'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'polygon'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'pophatch'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'rain'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'population'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'raster'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'restricted'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'simple_roads'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'simple_streams'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded default workspace 'cite'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded workspace 'sde'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded workspace 'cite'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded workspace 'nurc'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded workspace 'sf'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded workspace 'tiger'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded workspace 'topp'
20 053 12:53:50 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
20 053 12:53:51 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
20 053 12:53:51 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
20 053 12:53:51 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'mosaic'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'archsites'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'bugsites'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'streams'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'restricted'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'roads'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'sfdem'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'poi'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'states'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
20 053 12:53:52 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
20 053 12:53:52 CONFIG [org.geoserver] - Read catalog in 2.721 s
20 053 12:53:52 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
20 053 12:53:52 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
20 053 12:53:52 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
20 053 12:53:52 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
20 053 12:53:52 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
20 053 12:53:52 CONFIG [gwc.layer] - Loaded 0 tile layers in 2.650 ms
20 053 12:53:52 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
20 053 12:53:52 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
20 053 12:53:53 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
20 053 12:53:53 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
20 053 12:53:53 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
20 053 12:53:53 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 053 12:53:53 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 053 12:53:53 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
20 053 12:53:53 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
20 053 12:53:53 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
20 053 12:53:53 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
20 053 12:53:53 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
20 053 12:53:53 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
20 053 12:53:53 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-4742b9d2:183f57510e6:-8000', enabled
20 053 12:53:53 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
20 053 12:53:53 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
20 053 12:53:53 CONFIG [org.geoserver] - Loaded service 'wms', enabled
20 053 12:53:53 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-4742b9d2:183f57510e6:-7fff', enabled
20 053 12:53:53 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
20 053 12:53:54 WARN   [coverage.processing] - Operation: BandCombine not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: BandSelect not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Binarize not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Border not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: ColorConvert not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Crop not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: ErrorDiffusion not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Format not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: ImageFunction not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Lookup not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Null not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: OrderedDither not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Mean not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Translate not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: And not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Divide not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: DivideInto not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Or not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Subtract not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: SubtractFrom not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: Xor not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: AndConst not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: OrConst not found in CoverageProcessor
20 053 12:53:54 WARN   [coverage.processing] - Operation: XorConst not found in CoverageProcessor
20 053 12:53:57 CONFIG [platform.resource] - Notifying ENTRY_CREATE change on /opt/geoserver_data/gwc-layers. Created: 22, removed: 0, modified: 0
20 054 12:54:00 CONFIG [geoserver.wps] - Found 5 bindable processes in GeoServer specific processes
20 054 12:54:00 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
20 054 12:54:00 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
20 054 12:54:00 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
20 054 12:54:00 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
20 054 12:54:00 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
20 054 12:54:00 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
20 054 12:54:00 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
20 054 12:54:00 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
20 054 12:54:00 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
20 054 12:54:00 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
20 054 12:54:00 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
20 054 12:54:00 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
20 054 12:54:00 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
20 054 12:54:01 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
20 054 12:54:01 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
20 054 12:54:01 CONFIG [geoserver.security] - Start reloading user/groups for service named default
20 054 12:54:01 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
20 059 12:59:29 INFO   [geoserver.security] - Strong cryptography is available
20 001 13:01:05 WARN   [form.AjaxSubmitLink] - unexpected invocation of #onSubmit() on [AjaxSubmitLink [Component id = save]]
20 001 13:01:05 WARN   [form.AjaxSubmitLink] - unexpected invocation of #onAfterSubmit() on [AjaxSubmitLink [Component id = save]]
20 001 13:01:13 WARN   [gce.image] - Could not find a world transform file for ua-logo, assuming the identity transform
20 001 13:01:13 INFO   [geoserver.web] - Connection to store ua-logo validated. Got a org.geoserver.catalog.CoverageDimensionCustomizerReader. Saving store
20 001 13:01:21 WARN   [gce.image] - Could not find a world transform file for ua-logo, assuming the identity transform
20 001 13:01:24 WARN   [gce.image] - Could not find a world transform file for ua-logo, assuming the identity transform
20 001 13:01:32 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:ua-logo
20 001 13:01:33 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 1, removed: 0, modified: 0
20 001 13:01:36 WARN   [catalog.impl] - Catalog listener threw exception handling event.
java.lang.IllegalArgumentException: A GeoServerTileLayer named 'floviz:ua-logo' already exists
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:142)
	at org.geoserver.gwc.layer.CatalogConfiguration.addLayer(CatalogConfiguration.java:457)
	at org.geowebcache.layer.TileLayerDispatcher.addLayer(TileLayerDispatcher.java:189)
	at org.geoserver.gwc.GWC.add(GWC.java:1415)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.createTileLayer(CatalogLayerEventListener.java:171)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleAddEvent(CatalogLayerEventListener.java:152)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1911)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1864)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:770)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1271)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:588)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:431)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:308)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSaveInternal(ResourceConfigurationPage.java:243)
	at org.geoserver.web.publish.PublishedConfigurationPage.doSave(PublishedConfigurationPage.java:333)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSave(ResourceConfigurationPage.java:93)
	at org.geoserver.web.publish.PublishedConfigurationPage$6.onSubmit(PublishedConfigurationPage.java:296)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:687)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 001 13:01:36 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:ua-logo
20 001 13:01:38 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 001 13:01:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:45 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-0.5 : 2399.5, -0.5 : 2399.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:404000, FORMAT=application/openlayers, BBOX=-0.5,-0.5,2399.5,2399.5, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 001 13:01:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:46 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[659.53125 : 1739.53125, 659.53125 : 1739.53125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=659.53125,659.53125,1739.53125,1739.53125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 001 13:01:48 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:48 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[940.78125 : 2020.78125, 555.46875 : 1635.46875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=940.78125,555.46875,2020.78125,1635.46875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 001 13:01:50 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:50 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[590.625 : 1670.625, 881.71875 : 1961.71875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=590.625,881.71875,1670.625,1961.71875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 001 13:01:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-84.375 : 995.625, 1603.125 : 2683.125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=-84.375,1603.125,995.625,2683.125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 001 13:01:53 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:53 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-386.71875 : 693.28125, 1572.1875 : 2652.1875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=-386.71875,1572.1875,693.28125,2652.1875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 001 13:01:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:55 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[184.21875 : 1264.21875, 1080.0 : 2160.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=184.21875,1080,1264.21875,2160, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 001 13:01:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:57 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[763.59375 : 1843.59375, 372.65625 : 1452.65625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=763.59375,372.65625,1843.59375,1452.65625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 001 13:01:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 13:01:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1321.875 : 2401.875, -99.84375 : 980.15625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=1321.875,-99.84375,2401.875,980.15625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 002 13:02:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 002 13:02:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1532.8125 : 2612.8125, -90.0 : 990.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=1532.8125,-90,2612.8125,990, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 002 13:02:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 002 13:02:23 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1755.0 : 2835.0, -98.4375 : 981.5625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=1755,-98.4375,2835,981.5625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 002 13:02:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 002 13:02:25 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1323.28125 : 2403.28125, 35.15625 : 1115.15625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=1323.28125,35.15625,2403.28125,1115.15625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 002 13:02:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 002 13:02:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[919.6875 : 1999.6875, 552.65625 : 1632.65625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=919.6875,552.65625,1999.6875,1632.65625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 002 13:02:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 002 13:02:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[693.28125 : 1773.28125, 531.5625 : 1611.5625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=693.28125,531.5625,1773.28125,1611.5625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 014 13:14:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 014 13:14:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-0.5 : 2399.5, -0.5 : 2399.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:404000, FORMAT=application/openlayers, BBOX=-0.5,-0.5,2399.5,2399.5, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 014 13:14:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 014 13:14:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[659.53125 : 1739.53125, 659.53125 : 1739.53125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=659.53125,659.53125,1739.53125,1739.53125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 014 13:14:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 014 13:14:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1188.28125 : 2268.28125, 618.75 : 1698.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=1188.28125,618.75,2268.28125,1698.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 014 13:14:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 014 13:14:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[513.28125 : 1593.28125, 939.375 : 2019.375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=513.28125,939.375,1593.28125,2019.375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 014 13:14:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 014 13:14:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[705.9375 : 1785.9375, 1231.875 : 2311.875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=705.9375,1231.875,1785.9375,2311.875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 014 13:14:53 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
20 014 13:14:56 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
20 014 13:14:56 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
20 014 13:14:56 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
20 014 13:14:56 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
20 014 13:14:56 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'burg'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'capitals'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'dem'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'generic'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'green'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'line'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'poi'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'grass'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'point'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'polygon'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'pophatch'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'rain'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'raster'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'population'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'restricted'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'simple_roads'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'simple_streams'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded default workspace 'cite'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded workspace 'cite'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded workspace 'nurc'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded workspace 'sde'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded workspace 'tiger'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded workspace 'topp'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded workspace 'sf'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded workspace 'floviz'
20 014 13:14:56 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
20 014 13:14:58 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
20 014 13:14:58 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
20 014 13:14:58 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
20 014 13:14:58 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
20 014 13:14:58 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
20 014 13:14:58 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
20 014 13:14:58 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
20 014 13:14:58 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
20 014 13:14:58 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
20 014 13:14:58 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
20 014 13:14:58 CONFIG [org.geoserver] - Loaded layer 'mosaic'
20 014 13:14:58 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'archsites'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'bugsites'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'restricted'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'streams'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'roads'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'sfdem'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'poi'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'states'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded coverage store 'ua-logo', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded coverage 'ua-logo', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer 'ua-logo'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
20 014 13:14:59 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
20 014 13:14:59 CONFIG [org.geoserver] - Read catalog in 2.817 s
20 014 13:14:59 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
20 014 13:14:59 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
20 014 13:14:59 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
20 014 13:14:59 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
20 014 13:14:59 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
20 014 13:14:59 CONFIG [gwc.layer] - Loaded 23 tile layers in 24.20 ms
20 014 13:14:59 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
20 014 13:14:59 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
20 014 13:14:59 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
20 014 13:14:59 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
20 014 13:14:59 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
20 014 13:14:59 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 014 13:14:59 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 014 13:14:59 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
20 014 13:14:59 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
20 014 13:14:59 CONFIG [diskquota.DiskQuotaMonitor] - 23 layers attached to global quota 500.0 MB
20 014 13:14:59 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
20 014 13:14:59 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
20 014 13:14:59 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
20 014 13:14:59 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--69e94f43:183f58863c3:-8000', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded service 'wms', enabled
20 014 13:14:59 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-4742b9d2:183f57510e6:-7fff', enabled
20 015 13:15:00 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
20 015 13:15:05 CONFIG [geoserver.wps] - Found 5 bindable processes in GeoServer specific processes
20 015 13:15:05 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
20 015 13:15:05 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
20 015 13:15:05 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
20 015 13:15:05 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
20 015 13:15:05 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
20 015 13:15:05 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
20 015 13:15:05 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
20 015 13:15:05 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
20 015 13:15:05 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
20 015 13:15:05 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
20 015 13:15:05 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
20 015 13:15:05 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
20 015 13:15:05 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
20 015 13:15:06 CONFIG [geoserver.security] - Start reloading user/groups for service named default
20 015 13:15:06 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
20 015 13:15:06 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
20 015 13:15:06 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
20 019 13:19:19 INFO   [geoserver.security] - Strong cryptography is available
20 019 13:19:56 INFO   [geoserver.web] - Connection to store snow_file_store validated. Got a org.geoserver.catalog.CoverageDimensionCustomizerReader$CoverageDimensionCustomizerStructuredReader. Saving store
20 021 13:21:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 021 13:21:07 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=raster, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@7b207a75
20 021 13:21:27 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 021 13:21:29 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 1, removed: 0, modified: 0
20 023 13:23:02 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 023 13:23:02 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=raster, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@7b207a75
20 023 13:23:10 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 023 13:23:10 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 023 13:23:14 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 023 13:23:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 023 13:23:16 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=snow_style, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=snow_style, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=snow_style, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@7b207a75
20 023 13:23:19 INFO   [gwc.layer] - Truncating default style for layer floviz:snowLZWdataset, as it changed from raster to snow_style
20 023 13:23:19 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 023 13:23:19 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 023 13:23:19 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 024 13:24:23 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 024 13:24:23 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 024 13:24:24 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 024 13:24:37 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 024 13:24:39 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 024 13:24:44 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 024 13:24:44 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 024 13:24:49 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 024 13:24:53 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 024 13:24:54 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624800.0 : 632600.0, 5171500.0 : 5184500.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=624800.0,5171500.0,632600.0,5184500.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 460
20 024 13:24:54 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 024 13:24:55 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 025 13:25:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 025 13:25:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[625146.6741424245 : 633927.0921481499, 5169852.858175473 : 5184512.33867199]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=625146.6741424245,5169852.858175473,633927.0921481499,5184512.33867199, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 025 13:25:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 025 13:25:19 ERROR  [geoserver.ows] - 
java.text.ParseException: Invalid date: openlayers
	at org.geotools.util.DateTimeParser.getFuzzyDate(DateTimeParser.java:516)
	at org.geotools.util.DateTimeParser.parseTimeDuration(DateTimeParser.java:424)
	at org.geotools.util.DateTimeParser.parse(DateTimeParser.java:353)
	at org.geoserver.ows.kvp.TimeKvpParser.parse(TimeKvpParser.java:38)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:438)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1483)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1479)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:319)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:238)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 025 13:25:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 025 13:25:47 ERROR  [geoserver.ows] - 
java.text.ParseException: Invalid date: openlayers
	at org.geotools.util.DateTimeParser.getFuzzyDate(DateTimeParser.java:516)
	at org.geotools.util.DateTimeParser.parseTimeDuration(DateTimeParser.java:424)
	at org.geotools.util.DateTimeParser.parse(DateTimeParser.java:353)
	at org.geoserver.ows.kvp.TimeKvpParser.parse(TimeKvpParser.java:38)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:438)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1483)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1479)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:319)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:238)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 027 13:27:33 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 027 13:27:33 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624650.3896464487 : 633430.807652174, 5171456.23885478 : 5186115.719351296]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624650.3896464487,5171456.23885478,633430.807652174,5186115.719351296, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 027 13:27:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 027 13:27:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[623085.184697602 : 631865.6027033273, 5173250.498186384 : 5187909.978682901]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=623085.184697602,5173250.498186384,631865.6027033273,5187909.978682901, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 027 13:27:35 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 027 13:27:35 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[618714.063559969 : 636274.8995714199, 5165901.670072897 : 5195220.631065928]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=618714.063559969,5165901.670072897,636274.8995714199,5195220.631065928, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=461, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 461
20 027 13:27:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 027 13:27:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[621844.4734576624 : 639405.3094691134, 5163038.4902884215 : 5192357.451281453]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=621844.4734576624,5163038.4902884215,639405.3094691134,5192357.451281453, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=461, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 461
20 027 13:27:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 027 13:27:38 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[625471.1678513316 : 634251.585857057, 5170310.96694099 : 5184970.447437506]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=625471.1678513316,5170310.96694099,634251.585857057,5184970.447437506, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 027 13:27:39 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 027 13:27:39 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624745.8289725978 : 633526.2469783232, 5170463.669862828 : 5185123.150359345]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624745.8289725978,5170463.669862828,633526.2469783232,5185123.150359345, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 028 13:28:29 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 028 13:28:29 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 028 13:28:35 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 028 13:28:35 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624800.0 : 632600.0, 5171500.0 : 5184500.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=624800.0,5171500.0,632600.0,5184500.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 460
20 028 13:28:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 028 13:28:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 028 13:28:40 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 028 13:28:40 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624800.0 : 632600.0, 5171500.0 : 5184500.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=624800.0,5171500.0,632600.0,5184500.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 460
20 028 13:28:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 028 13:28:41 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 031 13:31:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 031 13:31:07 ERROR  [geoserver.ows] - 
java.text.ParseException: Invalid date: openlayers
	at org.geotools.util.DateTimeParser.getFuzzyDate(DateTimeParser.java:516)
	at org.geotools.util.DateTimeParser.parseTimeDuration(DateTimeParser.java:424)
	at org.geotools.util.DateTimeParser.parse(DateTimeParser.java:353)
	at org.geoserver.ows.kvp.TimeKvpParser.parse(TimeKvpParser.java:38)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:438)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1483)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1479)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:319)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:238)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 032 13:32:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 032 13:32:22 INFO   [geoserver.wms] - 
Request: getCapabilities
	AcceptLanguages = null
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	Namespace = null
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.1, SERVICE=wms}
	Request = GetCapabilities
	RequestCharset = null
	RootLayerEnabled = null
	UpdateSequence = null
	Version = 1.1.1
20 032 13:32:28 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 032 13:32:28 INFO   [geoserver.wms] - 
Request: getCapabilities
	AcceptLanguages = null
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	Namespace = null
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.1, SERVICE=wms}
	Request = GetCapabilities
	RequestCharset = null
	RootLayerEnabled = null
	UpdateSequence = null
	Version = 1.1.1
20 032 13:32:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 032 13:32:58 ERROR  [geoserver.ows] - 
java.text.ParseException: Invalid date: openlayers
	at org.geotools.util.DateTimeParser.getFuzzyDate(DateTimeParser.java:516)
	at org.geotools.util.DateTimeParser.parseTimeDuration(DateTimeParser.java:424)
	at org.geotools.util.DateTimeParser.parse(DateTimeParser.java:353)
	at org.geoserver.ows.kvp.TimeKvpParser.parse(TimeKvpParser.java:38)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:438)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1483)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1479)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:319)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:238)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 033 13:33:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 033 13:33:51 WARN   [gce.image] - Could not find a world transform file for ua-logo, assuming the identity transform
20 033 13:33:51 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[776.25 : 1856.25, 1162.96875 : 2242.96875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = LOCAL_CS["Wildcard 2D cartesian plane in metric unit", 
  LOCAL_DATUM["Unknown", 0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","404000"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@fa13cdd2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:404000, BBOX=776.25,1162.96875,1856.25,2242.96875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:ua-logo}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:404000
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 034 13:34:22 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 034 13:34:24 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 034 13:34:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 034 13:34:27 ERROR  [geoserver.ows] - 
java.text.ParseException: Invalid date: openlayers
	at org.geotools.util.DateTimeParser.getFuzzyDate(DateTimeParser.java:516)
	at org.geotools.util.DateTimeParser.parseTimeDuration(DateTimeParser.java:424)
	at org.geotools.util.DateTimeParser.parse(DateTimeParser.java:353)
	at org.geoserver.ows.kvp.TimeKvpParser.parse(TimeKvpParser.java:38)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:438)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1483)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1479)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:319)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:238)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 035 13:35:27 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 035 13:35:29 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 035 13:35:34 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 035 13:35:34 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 035 13:35:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 035 13:35:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624800.0 : 632600.0, 5171500.0 : 5184500.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=624800.0,5171500.0,632600.0,5184500.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 460
20 035 13:35:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 035 13:35:38 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 035 13:35:46 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 035 13:35:46 ERROR  [geoserver.ows] - 
java.text.ParseException: Invalid date: openlayers
	at org.geotools.util.DateTimeParser.getFuzzyDate(DateTimeParser.java:516)
	at org.geotools.util.DateTimeParser.parseTimeDuration(DateTimeParser.java:424)
	at org.geotools.util.DateTimeParser.parse(DateTimeParser.java:353)
	at org.geoserver.ows.kvp.TimeKvpParser.parse(TimeKvpParser.java:38)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:438)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1483)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1479)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:319)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:238)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 035 13:35:59 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 035 13:35:59 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 036 13:36:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624800.0 : 632600.0, 5171500.0 : 5184500.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=624800.0,5171500.0,632600.0,5184500.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 460
20 036 13:36:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 036 13:36:19 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:snowLZWdataset
20 036 13:36:19 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 036 13:36:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624800.0 : 632600.0, 5171500.0 : 5184500.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=624800.0,5171500.0,632600.0,5184500.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 460
20 036 13:36:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 036 13:36:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[623676.908519727 : 632457.3265254523, 5169891.033905933 : 5184550.514402449]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=623676.908519727,5169891.033905933,632457.3265254523,5184550.514402449, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 036 13:36:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[625165.7620076543 : 629555.971010517, 5173250.498186385 : 5180580.238434643]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=625165.7620076543,5173250.498186385,629555.971010517,5180580.238434643, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 036 13:36:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[625910.1887516179 : 628105.2932530493, 5174892.05459615 : 5178556.92472028]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=625910.1887516179,5174892.05459615,628105.2932530493,5178556.92472028, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 036 13:36:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:38 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[625156.2180750393 : 629546.427077902, 5173260.042119 : 5180589.782367257]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=625156.2180750393,5173260.042119,629546.427077902,5180589.782367257, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 036 13:36:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 036 13:36:38 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[623657.8206544971 : 632438.2386602225, 5169986.473232082 : 5184645.953728599]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=623657.8206544971,5169986.473232082,632438.2386602225,5184645.953728599, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 037 13:37:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 037 13:37:43 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: There is no support for creating maps in application format
	at org.geoserver.wms.GetMap.getDelegate(GetMap.java:828)
	at org.geoserver.wms.GetMap.run(GetMap.java:176)
	at org.geoserver.wms.GetMap.run(GetMap.java:113)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:250)
	at jdk.internal.reflect.GeneratedMethodAccessor492.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:57)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:32)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:62)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:41)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy120.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor453.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 038 13:38:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 038 13:38:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624800.0 : 632600.0, 5171500.0 : 5184500.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=624800.0,5171500.0,632600.0,5184500.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 460
20 038 13:38:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 038 13:38:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 038 13:38:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 038 13:38:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624800.0 : 632600.0, 5171500.0 : 5184500.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=624800.0,5171500.0,632600.0,5184500.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=768, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 460
20 038 13:38:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 038 13:38:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 038 13:38:33 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 038 13:38:33 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not determine geoserver request from http request org.geoserver.platform.AdvancedDispatchFilter$AdvancedDispatchHttpRequest@6338b119
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:619)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 039 13:39:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 039 13:39:05 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not determine geoserver request from http request org.geoserver.platform.AdvancedDispatchFilter$AdvancedDispatchHttpRequest@626102c6
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:619)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 039 13:39:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 039 13:39:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 039 13:39:32 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 039 13:39:32 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=460, HEIGHT=769, TRANSPARENT=true, LAYERS=floviz:snowLZWdataset}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 040 13:40:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 040 13:40:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, WIDTH=460, TIME=2009-10-01T00:00:00.000Z, HEIGHT=769, LAYERS=floviz:snowLZWdataset, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [Thu Oct 01 00:00:00 GMT 2009]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 040 13:40:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 040 13:40:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, WIDTH=460, TIME=2009-11-01T00:00:00.000Z, HEIGHT=769, LAYERS=floviz:snowLZWdataset, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [Sun Nov 01 00:00:00 GMT 2009]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 045 13:45:53 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 045 13:45:53 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: No such operation wms null animate
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:636)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 046 13:46:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 046 13:46:16 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: No such operation wms null animate
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:636)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 048 13:48:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 048 13:48:36 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: No such operation wms null animate
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:636)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 052 13:52:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 052 13:52:34 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: No such operation floviz/wms null animate
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:636)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 053 13:53:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 053 13:53:17 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=snow_style, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=snow_style, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=snow_style, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@7b207a75
20 054 13:54:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 054 13:54:34 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: No such operation wms null animate
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:636)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 058 13:58:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 058 13:58:16 INFO   [geoserver.wms] - 
Request: getCapabilities
	AcceptLanguages = null
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	Namespace = null
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.1, SERVICE=wms}
	Request = GetCapabilities
	RequestCharset = null
	RootLayerEnabled = null
	UpdateSequence = null
	Version = 1.1.1
20 058 13:58:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 058 13:58:19 INFO   [geoserver.wms] - 
Request: getCapabilities
	AcceptLanguages = null
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	Namespace = null
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.1, SERVICE=wms}
	Request = GetCapabilities
	RequestCharset = null
	RootLayerEnabled = null
	UpdateSequence = null
	Version = 1.1.1
20 004 14:04:59 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
20 005 14:05:02 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
20 005 14:05:03 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
20 005 14:05:03 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
20 005 14:05:03 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
20 005 14:05:03 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'burg'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'capitals'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'dem'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'green'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'generic'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'line'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'poi'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'grass'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'point'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'polygon'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'pophatch'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'rain'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'raster'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'population'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'simple_roads'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'simple_streams'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'restricted'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded style 'snow_style'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded default workspace 'cite'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded workspace 'sde'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded workspace 'nurc'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded workspace 'cite'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded workspace 'sf'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded workspace 'topp'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded workspace 'floviz'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded workspace 'tiger'
20 005 14:05:03 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'mosaic'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'restricted'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'archsites'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'bugsites'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'roads'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'streams'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'sfdem'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'poi'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
20 005 14:05:05 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
20 005 14:05:05 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer 'states'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded coverage store 'ua-logo', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded coverage 'ua-logo', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer 'ua-logo'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded coverage store 'snow_file_store', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded coverage 'snowLZWdataset', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer 'snowLZWdataset'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
20 005 14:05:06 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
20 005 14:05:06 CONFIG [org.geoserver] - Read catalog in 2.839 s
20 005 14:05:06 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
20 005 14:05:06 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
20 005 14:05:06 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
20 005 14:05:06 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
20 005 14:05:06 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
20 005 14:05:06 CONFIG [gwc.layer] - Loaded 24 tile layers in 21.00 ms
20 005 14:05:06 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
20 005 14:05:06 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
20 005 14:05:06 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
20 005 14:05:06 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
20 005 14:05:06 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
20 005 14:05:06 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 005 14:05:06 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 005 14:05:06 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
20 005 14:05:06 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
20 005 14:05:06 CONFIG [diskquota.DiskQuotaMonitor] - 24 layers attached to global quota 500.0 MB
20 005 14:05:06 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
20 005 14:05:06 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
20 005 14:05:06 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
20 005 14:05:06 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--1462ece3:183f5b6453f:-8000', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded service 'wms', enabled
20 005 14:05:06 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-4742b9d2:183f57510e6:-7fff', enabled
20 005 14:05:06 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
20 005 14:05:12 CONFIG [geoserver.wps] - Found 9 bindable processes in GeoServer specific processes
20 005 14:05:12 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
20 005 14:05:12 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
20 005 14:05:12 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
20 005 14:05:12 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
20 005 14:05:12 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
20 005 14:05:12 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
20 005 14:05:12 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
20 005 14:05:12 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
20 005 14:05:12 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
20 005 14:05:12 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
20 005 14:05:12 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
20 005 14:05:12 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
20 005 14:05:12 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
20 005 14:05:13 CONFIG [geoserver.security] - Start reloading user/groups for service named default
20 005 14:05:13 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
20 005 14:05:13 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
20 005 14:05:13 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
20 005 14:05:42 INFO   [geoserver.security] - Strong cryptography is available
20 005 14:05:50 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 005 14:05:51 INFO   [geoserver.wps] - 
Request: getCapabilities
    service = wps
    baseUrl = http://localhost:8080/geoserver/
20 009 14:09:53 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 009 14:09:55 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[624306.8080723116 : 633087.2260780369, 5170673.636380356 : 5185333.116876872]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 769
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e453c14]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, WIDTH=460, TIME=2009-10-01T00:00:00.000Z, HEIGHT=769, LAYERS=floviz:snowLZWdataset, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:32632, BBOX=624306.8080723116,5170673.636380356,633087.2260780369,5185333.116876872, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [Thu Oct 01 00:00:00 GMT 2009]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 460
20 012 14:12:59 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 012 14:12:59 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not determine geoserver request from http request org.geoserver.platform.AdvancedDispatchFilter$AdvancedDispatchHttpRequest@736638ae
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:619)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 014 14:14:25 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 014 14:14:26 WARN   [geoserver.wms] - No layouts directory defined
20 014 14:14:26 ERROR  [wps.executor] - Process execution failed
org.geotools.process.ProcessException: org.geoserver.platform.ServiceException: Could not find decoration layout named: formattedTimestamper
	at org.geotools.process.factory.AnnotationDrivenProcessFactory$InvokeMethodProcess.execute(AnnotationDrivenProcessFactory.java:649)
	at org.geoserver.wps.executor.ProcessStartupFilter$ProcessStartupWrapper.execute(ProcessStartupFilter.java:50)
	at org.geoserver.wps.executor.DefaultProcessManager$ProcessCallable.call(DefaultProcessManager.java:222)
	at org.geoserver.wps.executor.DefaultProcessManager$ProcessCallable.call(DefaultProcessManager.java:191)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.geoserver.platform.ServiceException: Could not find decoration layout named: formattedTimestamper
	at org.geoserver.wms.map.AbstractMapOutputFormat.findDecorationLayout(AbstractMapOutputFormat.java:128)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:277)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:205)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:82)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:344)
	at org.geoserver.wms.GetMap.run(GetMap.java:203)
	at org.geoserver.wms.GetMap.run(GetMap.java:113)
	at org.geoserver.wps.gs.download.DownloadMapProcess.buildImageInternal(DownloadMapProcess.java:431)
	at org.geoserver.wps.gs.download.DownloadMapProcess.buildImage(DownloadMapProcess.java:329)
	at org.geoserver.wps.gs.download.DownloadAnimationProcess.execute(DownloadAnimationProcess.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geotools.process.factory.AnnotationDrivenProcessFactory$InvokeMethodProcess.execute(AnnotationDrivenProcessFactory.java:633)
	... 7 more
20 014 14:14:26 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4ad032de (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@ab515bbinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@38e2abbc (value: decoration, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5de03471input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@166dabd1 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@34d77c6ainput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@19459e07 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@45da72e2input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@3e926aab (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@31a9753finput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4a960ab (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@12725fbeinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@3f18a869 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@45623238
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@a01be07 (value: result, codeSpace: null)
            mimeType = video/mp4
20 015 14:15:40 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 015 14:15:41 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@6c76a92d (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5ca8f625input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@192f30bf (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7820c160input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@21463088 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@3ac4f35binput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@5a8e8674 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@24db6784input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@3409d1e7 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@29caa216input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7592c7d (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@78419c55
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@2bdfc53 (value: result, codeSpace: null)
            mimeType = video/mp4
20 015 14:15:41 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
20 015 14:15:51 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 015 14:15:51 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4a959f19 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@64976448input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1605d014 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@48df3b31input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@2e540864 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@71be8cc2input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@49036791 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@78b4cb33input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@76adfb69 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7370b1e2input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@219d6ff2 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7faec5a1
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@66c10f8e (value: result, codeSpace: null)
            mimeType = video/mp4
20 016 14:16:03 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 016 14:16:04 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@2531fb25 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7efae5f8input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1a4960e7 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@17da1cc3input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@3d9835ce (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@1464c2a0input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@457bd693 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@200e6fbinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7eca9530 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@4c89398binput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@57dda1c7 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@52efa2f9
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7826de81 (value: result, codeSpace: null)
            mimeType = video/mp4
20 017 14:17:09 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 017 14:17:09 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@79e74f3a (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@28b8b324input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1a587ec (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5e7a1e6input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@46bab0ff (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@2b760a9finput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@6c162fa (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@3e910b55input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@2d3f7930 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@3606bcfainput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@3b5dce72 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@d20a1ef
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@5b80bf82 (value: result, codeSpace: null)
            mimeType = image/gif
20 017 14:17:21 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 017 14:17:21 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@569bcd8d (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@661d1eb0input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4a900f1c (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@556a750einput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@5d953d8b (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@53f35017input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@19d15d9a (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@1f9589abinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@6b9896b7 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@2222003binput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@310ca468 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@267bb33
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@2de5b8e6 (value: result, codeSpace: null)
            mimeType = image/gif
20 017 14:17:26 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 017 14:17:26 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7c679b7b (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@58b199ccinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7c2742c9 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@31e0fbafinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@711c12ab (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@25378abdinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@63c0a5d8 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@554b178cinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@44d3cec4 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5da8d681input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@3b204689 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@365ad116
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@6ca59cf7 (value: result, codeSpace: null)
            mimeType = image/gif
20 018 14:18:35 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 018 14:18:36 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@54418579 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@78921dd7input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@63b91ee9 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5a91789input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@5d1b3008 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@350ff2d9input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1e6afcc7 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5332a5dcinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@57ad54c2 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@1dfeedd4input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@54bba668 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@12e1e566
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@2f57b8bc (value: result, codeSpace: null)
            mimeType = image/gif
20 023 14:23:30 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 023 14:23:30 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7ca1213a (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@74ee3dbcinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1ec0de1b (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@2218275binput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@57456ad3 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5243be5ainput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4a6b820f (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@292a56e6input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@5545b2e2 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@1abb677einput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@cd6e5dc (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@77301fc6
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@f9a6160 (value: result, codeSpace: null)
            mimeType = image/gif
20 026 14:26:22 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 026 14:26:23 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@2350766d (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5e240748input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@719603e9 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@176f484finput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@37acb7d1 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@494ce82binput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@80433a0 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@65442fdfinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@37040e99 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@19a7b5e2input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@30170c45 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7469f74f
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@630e5f9d (value: result, codeSpace: null)
            mimeType = image/gif
20 026 14:26:27 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 026 14:26:27 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@788ab9a9 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@4071bed2input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@5f6dda20 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@65200a6binput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@48cab097 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5800072input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@348d6638 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@519b5190input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4c480d3c (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@49ce1757input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@16ad04f0 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@1db1d064
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@119c0f03 (value: result, codeSpace: null)
            mimeType = image/gif
20 040 14:40:47 INFO   [geoserver.web] - Connection to store ndvi_data validated. Got a org.geoserver.catalog.CoverageDimensionCustomizerReader$CoverageDimensionCustomizerStructuredReader. Saving store
20 041 14:41:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 041 14:41:09 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=raster, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@62d0b4ac
20 041 14:41:34 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 041 14:41:36 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 1, removed: 0, modified: 0
20 041 14:41:37 WARN   [catalog.impl] - Catalog listener threw exception handling event.
java.lang.IllegalArgumentException: A GeoServerTileLayer named 'floviz:NDVI_data' already exists
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:142)
	at org.geoserver.gwc.layer.CatalogConfiguration.addLayer(CatalogConfiguration.java:457)
	at org.geowebcache.layer.TileLayerDispatcher.addLayer(TileLayerDispatcher.java:189)
	at org.geoserver.gwc.GWC.add(GWC.java:1415)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.createTileLayer(CatalogLayerEventListener.java:171)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleAddEvent(CatalogLayerEventListener.java:152)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1911)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1864)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:770)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1271)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:588)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:431)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:308)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSaveInternal(ResourceConfigurationPage.java:243)
	at org.geoserver.web.publish.PublishedConfigurationPage.doSave(PublishedConfigurationPage.java:333)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSave(ResourceConfigurationPage.java:93)
	at org.geoserver.web.publish.PublishedConfigurationPage$6.onSubmit(PublishedConfigurationPage.java:296)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:687)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 041 14:41:37 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 041 14:41:41 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 041 14:41:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 041 14:41:47 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.88418633062035 : 76.94519566125763, 29.541098118270465 : 32.57515799038415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=73.88418633062035,29.541098118270465,76.94519566125763,32.57515799038415, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 041 14:41:48 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 041 14:41:48 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=761, TRANSPARENT=true, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 042 14:42:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 042 14:42:07 ERROR  [geoserver.ows] - 
java.text.ParseException: Invalid date: openlayers
	at org.geotools.util.DateTimeParser.getFuzzyDate(DateTimeParser.java:516)
	at org.geotools.util.DateTimeParser.parseTimeDuration(DateTimeParser.java:424)
	at org.geotools.util.DateTimeParser.parse(DateTimeParser.java:353)
	at org.geoserver.ows.kvp.TimeKvpParser.parse(TimeKvpParser.java:38)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:438)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1483)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1479)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:319)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:238)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
20 045 14:45:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 045 14:45:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.88418633062035 : 76.94519566125763, 29.541098118270465 : 32.57515799038415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=73.88418633062035,29.541098118270465,76.94519566125763,32.57515799038415, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 045 14:45:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 045 14:45:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=761, TRANSPARENT=true, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [null]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 045 14:45:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 045 14:45:55 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.88418633062035 : 76.94519566125763, 29.541098118270465 : 32.57515799038415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=73.88418633062035,29.541098118270465,76.94519566125763,32.57515799038415, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, TIME=2021-12-19, HEIGHT=761, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 045 14:45:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 045 14:45:55 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 046 14:46:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 046 14:46:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.88418633062035 : 76.94519566125763, 29.541098118270465 : 32.57515799038415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=73.88418633062035,29.541098118270465,76.94519566125763,32.57515799038415, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, TIME=2021-12-19, HEIGHT=761, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 046 14:46:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 046 14:46:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 049 14:49:17 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 049 14:49:23 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@6db4e523 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@a683c7cinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@327f9f27 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@767d8d5binput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@3c2af34a (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@77eaa36finput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@39228c12 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@232fc938input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@48f4deb4 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@6a27fd1einput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4748ae54 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@1a73c98c
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@749cb508 (value: result, codeSpace: null)
            mimeType = image/gif
20 049 14:49:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 049 14:49:51 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.4490966796875 : 77.6678466796875, 28.65509033203125 : 32.83538818359375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.4490966796875,28.65509033203125,77.6678466796875,32.83538818359375, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 049 14:49:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 049 14:49:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.6907958984375 : 77.9095458984375, 28.50677490234375 : 32.68707275390625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.6907958984375,28.50677490234375,77.9095458984375,32.68707275390625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 050 14:50:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 050 14:50:51 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=raster, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@62d0b4ac
20 050 14:50:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 050 14:50:57 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=green, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=green, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=green, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@62d0b4ac
20 051 14:51:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 051 14:51:07 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=snow_style, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=snow_style, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=snow_style, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@62d0b4ac
20 051 14:51:09 INFO   [gwc.layer] - Truncating default style for layer floviz:NDVI_data, as it changed from raster to snow_style
20 051 14:51:09 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 051 14:51:09 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 051 14:51:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 051 14:51:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.88418633062035 : 76.94519566125763, 29.541098118270465 : 32.57515799038415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=73.88418633062035,29.541098118270465,76.94519566125763,32.57515799038415, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, TIME=2021-12-19, HEIGHT=761, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 051 14:51:11 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 051 14:51:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 051 14:51:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 051 14:51:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 051 14:51:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.85284423828125 : 33.03314208984375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3062744140625,28.85284423828125,77.5250244140625,33.03314208984375, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 051 14:51:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 051 14:51:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.88418633062035 : 76.94519566125763, 29.541098118270465 : 32.57515799038415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=73.88418633062035,29.541098118270465,76.94519566125763,32.57515799038415, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, TIME=2021-12-19, HEIGHT=761, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 051 14:51:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 051 14:51:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 051 14:51:20 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 051 14:51:25 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@12c11212 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@26ac36f2input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@6b1c2067 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@54380274input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4ef3db63 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@9af7fe9input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@33a69a3 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@1785e012input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@47fd1942 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@355f6663input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@65f8661a (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5dc58fc7
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@72ddba34 (value: result, codeSpace: null)
            mimeType = image/gif
20 052 14:52:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 052 14:52:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 054 14:54:21 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 054 14:54:26 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@3f2ca2d2 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@62be1a24input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@33ead47a (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@3004fea9input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@6ae4f049 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7899b80binput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1db5ea66 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@a53becfinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@47f87174 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7294c060input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4040f28e (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@57f2998f
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@530531d4 (value: result, codeSpace: null)
            mimeType = image/gif
20 056 14:56:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.245849609375 : 77.464599609375, 28.73748779296875 : 32.91778564453125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.245849609375,28.73748779296875,77.464599609375,32.91778564453125, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:12 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 056 14:56:12 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 056 14:56:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.88418633062035 : 76.94519566125763, 29.541098118270465 : 32.57515799038415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=73.88418633062035,29.541098118270465,76.94519566125763,32.57515799038415, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, TIME=2021-12-19, HEIGHT=761, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 056 14:56:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:16 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 056 14:56:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.32275390625 : 77.54150390625, 28.69354248046875 : 32.87384033203125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.32275390625,28.69354248046875,77.54150390625,32.87384033203125, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.2403564453125 : 77.4591064453125, 28.71002197265625 : 32.89031982421875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.2403564453125,28.71002197265625,77.4591064453125,32.89031982421875, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:18 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3447265625 : 77.5634765625, 28.61114501953125 : 32.79144287109375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3447265625,28.61114501953125,77.5634765625,32.79144287109375, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:18 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[75.00022888183594 : 75.52757263183594, 30.62267303466797 : 31.14521026611328]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=75.00022888183594,30.62267303466797,75.52757263183594,31.14521026611328, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[75.07369995117188 : 75.60104370117188, 30.643959045410156 : 31.16649627685547]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=75.07369995117188,30.643959045410156,75.60104370117188,31.16649627685547, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[74.3499755859375 : 78.5687255859375, 28.64410400390625 : 32.82440185546875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=74.3499755859375,28.64410400390625,78.5687255859375,32.82440185546875, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[72.5592041015625 : 76.7779541015625, 28.66058349609375 : 32.84088134765625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=72.5592041015625,28.66058349609375,76.7779541015625,32.84088134765625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:23 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.4161376953125 : 77.6348876953125, 28.70452880859375 : 32.88482666015625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.4161376953125,28.70452880859375,77.6348876953125,32.88482666015625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:25 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.88418633062035 : 76.94519566125763, 29.541098118270465 : 32.57515799038415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=73.88418633062035,29.541098118270465,76.94519566125763,32.57515799038415, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, TIME=2021-12-19, HEIGHT=761, LAYERS=floviz:NDVI_data}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 056 14:56:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 056 14:56:25 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[73.3062744140625 : 77.5250244140625, 28.96820068359375 : 33.14849853515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 761
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d72625e]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/jpeg, STYLES=, TIME=2021-12-19, WIDTH=768, HEIGHT=761, LAYERS=floviz:NDVI_data, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:4326, BBOX=73.3062744140625,28.96820068359375,77.5250244140625,33.14849853515625, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=snow_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = [[Sun Dec 19 00:00:00 GMT 2021, Sun Dec 19 23:59:59 GMT 2021]]
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 056 14:56:30 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 056 14:56:35 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@619bd949 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@6a9f8870input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@20050f11 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@334819e9input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@ca6df58 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@1a6c1ab4input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1219f36f (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@61ed3794input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@5b0b68ee (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@21486081input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7c977d4c (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@744ea4dd
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7402fea2 (value: result, codeSpace: null)
            mimeType = image/gif
20 058 14:58:32 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 058 14:58:36 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@6702181c (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@3ed94395input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1851436f (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@4192622dinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@362750fb (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@42167841input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@50ce1157 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@29f9269input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@e33aa49 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7f961fbeinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@5ff2edb2 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@218020ff
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@32f2b764 (value: result, codeSpace: null)
            mimeType = image/gif
20 059 14:59:10 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 059 14:59:14 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@53b39914 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@7a127b9einput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@35c9fa26 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@4d997788input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@22d2c16 (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@6b0a6946input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@1168a6cb (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@174ba659input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7c6d653a (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@449563a8input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@101fcb0f (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@5aacce3b
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@4d7f34e1 (value: result, codeSpace: null)
            mimeType = image/gif
20 059 14:59:30 INFO   [geoserver.wps] - 
Request: getServiceInfo
20 059 14:59:34 INFO   [geoserver.wps] - 
Request: execute
    service = WPS
    version = 1.0.0
    baseUrl = http://127.0.0.1:8080/geoserver/
    identifier:
        value = gs:DownloadAnimation
    dataInputs:
        input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7c6d7af5 (value: bbox, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@a4ca633input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@c09f719 (value: time, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@31fc7093input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@26511e8b (value: width, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@49c3594cinput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@a31ce52 (value: height, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@589b4f6finput[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@7690a7b1 (value: fps, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@254a8916input[0]:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@210d90b3 (value: layer, codeSpace: null)
            data = net.opengis.wps10.impl.DataTypeImpl@236f43ca
    responseForm:
        rawDataOutput:
            identifier = net.opengis.ows11.impl.CodeTypeImpl@50b1d539 (value: result, codeSpace: null)
            mimeType = image/gif
20 001 15:01:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 001 15:01:59 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=snow_style, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=snow_style, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=snow_style, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@62d0b4ac
20 002 15:02:06 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 002 15:02:06 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 002 15:02:06 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
20 002 15:02:08 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 002 15:02:08 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer floviz:NDVI_data
20 002 15:02:11 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 1
